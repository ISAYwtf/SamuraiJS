{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/Sidebar/sidebar-reducer.js","redux/App/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/FriendsList/FriendsList.jsx","redux/Sidebar/sidebar-selectors.js","components/Navbar/Navbar.jsx","hoc/withSuspense.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Content/Content.jsx","components/Content/index.js","components/Body/index.js","components/Body/Body.jsx","redux/App/app-selectors.js","App.js","index.js","components/Header/Header.module.css","redux/Auth/auth-reducer.js","components/Navbar/FriendsList/FriendsList.module.css","components/common/Preloader/Preloader.jsx","redux/Auth/auth-selectors.js","components/common/Preloader/Preloader.module.css","components/common/Button/Button.jsx","components/common/Button/index.js","redux/Profile/profile-reducer.js","redux/Dialogs/dialogs-reducer.js","api/api.js","utils/object-helpers.js","redux/Users/users-reducer.js","components/common/Button/Button.module.css","components/Body/Body.module.css","components/Content/Content.module.css"],"names":["module","exports","initialState","friends","id","img","sidebarReducer","state","INITIALIZED_SUCCESS","initialized","appReducer","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","isAuth","login","logout","className","classes","header","logo","src","alt","loginUser","to","loginInfo","Button","attr","HeaderContainer","render","props","React","Component","mapDispatchToProps","connect","getIsAuth","getAuthLogin","FriendsList","friendsElements","map","el","item","title","itemList","getSidebarFriends","FriendsListContainer","Navbar","nav","activeClassName","active","withSuspense","fallback","Preloader","Music","Settings","DialogsContainer","lazy","ProfileContainer","Login","UsersContainer","Content","content","path","exact","Body","body","getAppInitialized","initializeApp","dispatch","getMe","Promise","all","then","AppContainer","withRouter","useEffect","SamuraiJSApp","ReactDOM","document","getElementById","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","userId","email","captchaUrl","setUserData","payload","getCaptchaUrlSuccess","a","authAPI","data","resultCode","password","rememberMe","captcha","reset","getCaptcha","message","messages","length","stopSubmit","_error","securityAPI","getCaptchaUrl","url","flag","preloaderWrap","preloaderPulse","getAuthorizedId","getAuthCaptcha","button","children","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SET_FULLNAME","SET_PHOTO","TOGGLE_IS_FETCHING","posts","post","likesCount","status","profile","isFetching","setStatus","toggleIsFetching","addPostTC","newPost","addPost","getProfile","usersAPI","getUserStatus","profileAPI","getStatus","updateStatus","savePhoto","file","photos","updateProfile","getState","reject","filter","fullName","SEND_MESSAGE","dialogs","name","mine","sendMessageTC","sendMessage","newMessage","server","axios","withCredentials","headers","baseURL","getUsers","currentPage","pageSize","get","response","followTo","unFollowTo","delete","put","formData","FormData","append","updateObjectInArray","items","itemId","objPropName","newObjProps","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FOLLOWING","users","totalUsersCount","isFollowing","follow","unFollow","setCurrentPage","toggleIsFollowing","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.7670c79c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Tt1MA\",\"item\":\"Navbar_item__1GDSe\",\"active\":\"Navbar_active__1ndrs\"};","const initialState = {\r\n    friends: [\r\n        {id: 1, img: 'https://s0.rbk.ru/v6_top_pics/media/img/8/22/755895443908228.jpg'},\r\n        {\r\n            id: 2,\r\n            img: 'https://www.moya-planeta.ru/upload/images/xl/19/a7/19a713c5edb6c69c5a0c31b875d732b3.jpg'\r\n        },\r\n        {id: 3, img: 'https://brammels.com/wp-content/uploads/2018/06/krasivye-lyudi-umnee.jpg'},\r\n        {id: 4, img: 'https://www.kino-teatr.ru/art/5823/82736.jpg'}\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import {getMe} from \"../Auth/auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    const initialized = dispatch(getMe());\r\n\r\n    Promise.all([initialized])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./Profile/profile-reducer\";\r\nimport dialogsReducer from \"./Dialogs/dialogs-reducer\";\r\nimport sidebarReducer from \"./Sidebar/sidebar-reducer\";\r\nimport usersReducer from \"./Users/users-reducer\";\r\nimport authReducer from \"./Auth/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./App/app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst Header = ({isAuth, login, logout}) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>\r\n                <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"logo\"/>\r\n            </div>\r\n            <div className={classes.login}>\r\n                {isAuth\r\n                    ? <div className={classes.loginUser}>\r\n                        <NavLink to={\"/profile\"} className={classes.loginInfo}>{login}</NavLink>\r\n                        <Button attr={{\"onClick\": logout}}>Log Out</Button>\r\n                    </div>\r\n                    : <NavLink className={classes.loginInfo} to={`/login`}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/Auth/auth-reducer\";\r\nimport {getIsAuth, getAuthLogin} from \"../../redux/Auth/auth-selectors\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render = () => <Header {...this.props} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getAuthLogin(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import classes from './FriendsList.module.css';\r\n\r\nconst FriendsList = ({friends}) => {\r\n    const friendsElements = friends.map(el => <div className={classes.item} key={el.id}>\r\n        <img src={el.img}/>\r\n    </div>);\r\n\r\n    return (\r\n        <div className={classes.friends}>\r\n            <h3 className={classes.title}>Friends</h3>\r\n            <div className={classes.itemList}>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsList;\r\n","export const getSidebarFriends = state => state.sidebar.friends\r\n","import React from \"react\";\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsList from \"./FriendsList/FriendsList\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSidebarFriends} from \"../../redux/Sidebar/sidebar-selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: getSidebarFriends(state)\r\n})\r\n\r\nconst FriendsListContainer = connect(mapStateToProps)(FriendsList);\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <NavLink to={`/profile`} activeClassName={classes.active} className={classes.item}>\r\n                Profile\r\n            </NavLink>\r\n            <NavLink to={`/dialogs`} activeClassName={classes.active} className={classes.item}>\r\n                Messages\r\n            </NavLink>\r\n            <NavLink to={`/users`} activeClassName={classes.active} className={classes.item}>\r\n                Users\r\n            </NavLink>\r\n            <NavLink to={`/music`} activeClassName={classes.active} className={classes.item}>\r\n                Music\r\n            </NavLink>\r\n            <NavLink to={`/settings`} activeClassName={classes.active} className={classes.item}>\r\n                Settings\r\n            </NavLink>\r\n            <FriendsListContainer />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {Suspense} from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = Component =>\r\n    props =>\r\n        <Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {withSuspense} from \"../../hoc/withSuspense\";\r\nimport Music from \"../Music/Music\";\r\nimport Settings from \"../Settings/Settings\";\r\nimport classes from \"./Content.module.css\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./../Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./../Profile/ProfileContainer'));\r\nconst Login = React.lazy(() => import('./../Login/Login'));\r\nconst UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\r\n\r\nconst Content = props => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <Switch>\r\n                <Route path={`/`} exact\r\n                       render={() => <Redirect to={\"/profile\"}/>}/>\r\n                <Route path={`/profile/:userId?`}\r\n                       render={withSuspense(ProfileContainer)}/>\r\n                <Route path={`/dialogs`}\r\n                       render={withSuspense(DialogsContainer)}/>\r\n                <Route path={`/users`} render={withSuspense(UsersContainer)}/>\r\n                <Route path={`/music`} render={() => <Music/>}/>\r\n                <Route path={`/settings`} render={() => <Settings/>}/>\r\n                <Route path={`/login`} render={withSuspense(Login)}/>\r\n                <Route path={\"*\"} render={() => <div>404 NOT FOUND</div>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","import Content from \"./Content\";\r\n\r\nexport default Content;\r\n","import Body from \"./Body\";\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport classes from \"./Body.module.css\";\r\nimport Content from \"../Content\";\r\n\r\nconst Body = props => {\r\n    return (\r\n        <div className={classes.body}>\r\n            <Navbar/>\r\n            <Content/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n","export const getAppInitialized = state => state.app.initialized\r\n","import React, {useEffect} from \"react\";\r\nimport {HashRouter, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport './App.css';\r\nimport store from \"./redux/redux-store\";\r\nimport {initializeApp} from \"./redux/App/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Body from \"./components/Body\";\r\nimport {getAppInitialized} from \"./redux/App/app-selectors\";\r\n\r\nconst App = props => {\r\n    useEffect(() => props.initializeApp(), [])\r\n\r\n    if (!props.initialized) return <Preloader/>\r\n\r\n    return <div className='app-wrapper'>\r\n        <HeaderContainer/>\r\n        <Body/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({initialized: getAppInitialized(state)})\r\nconst mapDispatchToProps = {initializeApp}\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(App);\r\n\r\nconst SamuraiJSApp = props => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>;\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2gpML\",\"logo\":\"Header_logo__2P5Uz\",\"login\":\"Header_login__37Er4\",\"loginUser\":\"Header_loginUser__3w0Cd\",\"loginInfo\":\"Header_loginInfo__1DXwF\"};","import {authAPI, securityAPI} from \"../../api/api\";\r\nimport {reset, stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET-CAPTCHA-URL-SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\n\r\nexport const getMe = () => async dispatch => {\r\n    const data = await authAPI.getMe();\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha = null) => async dispatch => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(getMe());\r\n        dispatch(reset('login'));\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(reset('login'));\r\n            dispatch(getCaptcha());\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Email or password are incorrect.\";\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptcha = () => async dispatch => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n\r\n    const captchaUrl = data.url;\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    const data = await authAPI.logout()\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendsList_friends__3zf9I\",\"title\":\"FriendsList_title__2y_nZ\",\"itemList\":\"FriendsList_itemList__3A17Z\",\"item\":\"FriendsList_item__2MbUv\"};","import React from 'react';\r\nimport classes from \"./Preloader.module.css\";\r\n\r\nconst Preloader = ({flag = true}) => {\r\n    if (!flag) return \"\";\r\n\r\n    return <section className={classes.preloaderWrap}>\r\n        <div className={classes.preloaderPulse}></div>\r\n    </section>\r\n}\r\n\r\nexport default Preloader;\r\n","export const getAuthorizedId = state => state.auth.userId\r\nexport const getIsAuth = state => state.auth.isAuth\r\nexport const getAuthLogin = state => state.auth.login\r\nexport const getAuthCaptcha = state => state.auth.captchaUrl\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrap\":\"Preloader_preloaderWrap__3ydVF\",\"preloaderPulse\":\"Preloader_preloaderPulse__3Q7Dq\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n    let {className, attr} = props;\r\n\r\n    className = className ? className : \"\";\r\n\r\n    return <button {...attr} className={`${classes.button} ${className}`}>{props.children}</button>\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import {profileAPI, usersAPI} from \"../../api/api\";\r\nimport {reset, stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'samurai-network/profile/ADD-POST';\r\nconst DELETE_POST = 'samurai-network/profile/DELETE-POST';\r\nconst SET_USER_PROFILE = 'samurai-network/profile/SET-USER-PROFILE';\r\nconst SET_STATUS = 'samurai-network/profile/SET-STATUS';\r\nconst SET_FULLNAME = 'samurai-network/profile/SET-FULLNAME';\r\nconst SET_PHOTO = 'samurai-network/profile/SET-PHOTO';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/profile/TOGGLE-IS-FETCHING';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: 'Hi how are you', likesCount: 15},\r\n    ],\r\n    status: null,\r\n    profile: null,\r\n    isFetching: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: 3,\r\n                post: action.newPost,\r\n                likesCount: 1\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {...newPost}],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(el => el.id !== action.post),\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SET_FULLNAME:\r\n            return {\r\n                ...state,\r\n                fullName: action.fullName\r\n            };\r\n        case SET_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = newPost => ({type: ADD_POST, newPost});\r\nexport const deletePost = post => ({type: DELETE_POST, post});\r\nexport const setUserProfile = profile => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = status => ({type: SET_STATUS, status});\r\nexport const setFullName = fullName => ({type: SET_FULLNAME, fullName});\r\nexport const savePhotoSuccess = photos => ({type: SET_PHOTO, photos});\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const addPostTC = newPost => dispatch => {\r\n    dispatch(addPost(newPost));\r\n    dispatch(reset('postForm'));\r\n}\r\n\r\nexport const getProfile = userId => async dispatch => {\r\n    const data = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = userId => async dispatch => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\n\r\nexport const updateStatus = status => async dispatch => {\r\n    try {\r\n        const data = await profileAPI.updateStatus(status);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const savePhoto = file => async dispatch => {\r\n    const data = await profileAPI.savePhoto(file);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(data.data.photos));\r\n    }\r\n};\r\n\r\nexport const updateProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.updateProfile(profile);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(getProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfile\", {_error: data.messages[0]}));\r\n        return Promise.reject(data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","import {reset} from \"redux-form\";\r\n\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitriy'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Svetlana'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valeriy'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi', mine: false},\r\n        {id: 2, message: 'How are you', mine: false},\r\n        {id: 3, message: 'Yo', mine: false},\r\n        {id: 4, message: 'Yo', mine: true},\r\n        {id: 5, message: 'My friend', mine: true},\r\n        {id: 6, message: `It's a new cool chat, dude!`, mine: true},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const newMessage = {\r\n                id: 7,\r\n                message: action.message,\r\n                mine: true\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {...newMessage}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = message => ({type: SEND_MESSAGE, message});\r\n\r\nexport const sendMessageTC = message => dispatch => {\r\n    dispatch(sendMessage(message));\r\n    dispatch(reset(\"dialogAddMessageForm\"));\r\n}\r\n\r\nexport default dialogsReducer;\r\n","import * as axios from \"axios\";\r\n\r\nconst server = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"eed101de-783b-4107-bd06-6b28cf0259ec\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return server.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    followTo(id) {\r\n        return server.post(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    unFollowTo(id) {\r\n        return server.delete(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return server.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return server.get(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return server.put(`profile/status`, {status}).then(response => response.data);\r\n    },\r\n    updateProfile(profile) {\r\n        return server.put(`profile`, profile).then(response => response.data);\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        const headers = {\r\n            'Content-Type': 'multipart/form-data'\r\n        };\r\n\r\n        formData.append(\"image\", file);\r\n        return server.put(`profile/photo`, formData, {headers})\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getMe() {\r\n        return server.get(`auth/me/`, {\r\n            withCredentials: true\r\n        }).then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return server.post(`auth/login/`,\r\n            {email, password, rememberMe, captcha})\r\n            .then(response => response.data);\r\n    },\r\n    logout() {\r\n        return server.delete(`auth/login/`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return server.get(`security/get-captcha-url`).then(response => response.data);\r\n    },\r\n}\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(el => {\r\n        if (el[objPropName] === itemId) {\r\n            return {...el, ...newObjProps}\r\n        }\r\n        return el;\r\n    })\r\n}\r\n","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjectInArray} from \"../../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'samurai-network/users/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'samurai-network/users/SET-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'samurai-network/users/TOGGLE-IS-FOLLOWING';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 8,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowing: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state, isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = userId => ({type: FOLLOW, userId});\r\nexport const unFollow = userId => ({type: UNFOLLOW, userId});\r\nexport const setUsers = users => ({type: SET_USERS, users});\r\nexport const setCurrentPage = currentPage => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = totalCount => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowing = (isFollowing, userId) => ({type: TOGGLE_IS_FOLLOWING, isFollowing, userId});\r\n\r\nexport const getUsers = (page, pageSize) => async dispatch => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowing(true));\r\n\r\n    const data = await apiMethod(userId)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId));\r\n}\r\n\r\nexport const unFollowTo = userId => async dispatch => {\r\n    const apiMethod = usersAPI.unFollowTo.bind(usersAPI);\r\n    const actionCreator = unFollow;\r\n\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n}\r\n\r\nexport const followTo = userId => async dispatch => {\r\n    const apiMethod = usersAPI.followTo.bind(usersAPI);\r\n    const actionCreator = follow;\r\n\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n}\r\n\r\nexport default usersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2OA9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__O9JwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__QlRth\"};"],"sourceRoot":""}