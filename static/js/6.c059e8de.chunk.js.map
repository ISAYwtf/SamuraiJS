{"version":3,"sources":["components/common/FormControls/FormControls.js","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","className","container","children","Textarea","input","placeholder","Input","type","required","value","maxLengthCreator","maxLength","length","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","name","validate","component","mapDispatchToProps","login","connect","state","isAuth","auth","to","formData","email","password","rememberMe"],"mappings":"uNAGMA,EAAc,SAAAC,GAChB,IAAMC,EAAWD,EAAME,KAAKC,OAASH,EAAME,KAAKE,QAC1CC,EAAaJ,EAAWK,IAAQH,MAAQ,GACxCI,EAAeN,EAAW,uBAAOO,UAAWF,IAAQC,aAA1B,SAAyCP,EAAME,KAAKC,QAAiB,GAErG,OACI,sBAAKK,UAAS,UAAKF,IAAQG,UAAb,YAA0BT,EAAMQ,UAAhC,YAA6CH,GAA3D,UACKL,EAAMU,SACNH,MAKAI,EAAW,SAAAX,GACpB,OACI,cAACD,EAAD,2BAAiBC,GAAjB,aACI,oDAAcA,EAAMY,OAApB,IAA2BJ,UAAWF,IAAQM,MAAOC,YAAab,EAAMa,mBAKvEC,EAAQ,SAAAd,GACjB,OACI,cAACD,EAAD,2BAAiBC,GAAjB,aACI,iDAAWA,EAAMY,OAAjB,IAAwBJ,UAAWF,IAAQM,MAAOC,YAAab,EAAMa,YAAaE,KAAMf,EAAMe,a,iCC3B1G,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCN3CE,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,MAAQ,4BAA4B,aAAe,qC,oBCArJD,EAAOC,QAAU,CAAC,MAAQ,uB,uIC0BpBC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAlBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcvB,EAAW,EAAXA,MAC9B,OACI,uBAAMwB,SAAUD,EAAhB,UACI,8BAAK,cAAC,IAAD,CAAOX,KAAK,OAAOF,YAAa,QAASe,KAAM,QAASC,SAAU,CAACb,KAAWc,UAAWhB,QAC9F,8BAAK,cAAC,IAAD,CAAOC,KAAK,WAAWF,YAAa,WAAYe,KAAM,WAAYC,SAAU,CAACb,KACtEc,UAAWhB,QACvB,kCAAO,cAAC,IAAD,CAAOgB,UAAWhB,IAAOC,KAAK,WAAWa,KAAM,eAAtD,iBACCzB,EACK,qBAAKK,UAAWF,IAAQH,MAAxB,SAAgCA,IAChC,GAEN,8BACI,mDA+BV4B,EAAqB,CACvBC,WAGWC,uBARS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,KAAKD,UAOiBJ,EAAzBE,EAzBD,SAAC,GAAqB,IAApBD,EAAmB,EAAnBA,MAKZ,OAL+B,EAAZG,OAMR,cAAC,IAAD,CAAUE,GAAI,aAIrB,gCACI,yCACA,cAACd,EAAD,CAAgBI,SAXP,SAAAW,GACbN,EAAMM,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.c059e8de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n    const hasError = props.meta.error && props.meta.touched;\r\n    const errorClass = hasError ? classes.error : \"\";\r\n    const errorMessage = hasError ? <small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n    return (\r\n        <div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n            {props.children}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = props => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...props.input} className={classes.input} placeholder={props.placeholder} type={props.type}/>\r\n        </FormControl>\r\n    )\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1O6pH\",\"input\":\"FormControls_input__1vNYD\",\"error\":\"FormControls_error__R3-iJ\",\"errorMessage\":\"FormControls_errorMessage__znvpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__28wyR\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field type=\"text\" placeholder={\"Email\"} name={\"email\"} validate={[required]} component={Input}/></div>\r\n            <div><Field type=\"password\" placeholder={\"Password\"} name={\"password\"} validate={[required]}\r\n                        component={Input}/></div>\r\n            <label><Field component={Input} type=\"checkbox\" name={\"rememberMe\"}/>Remember Me</label>\r\n            {error\r\n                ? <div className={classes.error}>{error}</div>\r\n                : \"\"\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm);\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = formData => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"} />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sign in</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}