{"version":3,"sources":["components/common/FormControls/FormControls.js","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.jsx","redux/Dialogs/dialogs-selectors.js","components/Messages/Message/Message.module.css","components/Messages/Messages.module.css","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","active","className","container","children","Textarea","input","placeholder","Input","type","attr","module","exports","required","value","maxLengthCreator","maxLength","length","composeValidators","validators","reduce","validator","undefined","mapStateToPropsRedirect","state","isAuth","getIsAuth","withAuthRedirect","Component","connect","to","getDialogsPage","dialogsPage","Message","factor","message","mine","right","left","maxLength300","AddMessageFormRedux","reduxForm","form","handleSubmit","inputs","onSubmit","Field","component","name","textarea","validate","Button","add","Messages","sendMessageTC","messagesElements","messages","map","el","id","title","messageList","values","messageBody","mapDispatchToProps","compose"],"mappings":"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","file":"static/js/5.fd49886e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n    const hasError = props.meta.error && props.meta.touched;\r\n    const errorClass = hasError ? classes.error : \"\";\r\n    const errorMessage = hasError && props.meta.active ?\r\n        <small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n    return (\r\n        <div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n            {props.children}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props =>\r\n    <FormControl {...props}>\r\n        <textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n    </FormControl>\r\n\r\nexport const Input = props => {\r\n    const type = props.type || props.input.type || \"text\";\r\n    const placeholder = props.placeholder || props.input.placeholder || \"\";\r\n\r\n    return <FormControl {...props}>\r\n        <input {...props.input} className={`${classes.input} ${props.className}`} {...props.attr}\r\n               placeholder={placeholder} type={type}/>\r\n    </FormControl>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__2sQsd\",\"input\":\"FormControls_input__2T87e\",\"error\":\"FormControls_error__IMw-7\",\"errorMessage\":\"FormControls_errorMessage__3MzwF\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../redux/Auth/auth-selectors\";\r\n\r\nconst mapStateToPropsRedirect = state => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    const RedirectComponent = props =>\r\n        !props.isAuth\r\n            ? <Redirect to={'/login'}/>\r\n            : <Component {...props} />\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}\r\n","export const getDialogsPage = state => state.dialogsPage\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__16tvO\",\"left\":\"Message_left__Ll4x5\",\"right\":\"Message_right__2RF-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Messages_title__1z8mE\",\"messages\":\"Messages_messages__391xN\",\"messageList\":\"Messages_messageList__241Qa\",\"inputs\":\"Messages_inputs__2qJW_\",\"textarea\":\"Messages_textarea__3qS_M\",\"add\":\"Messages_add__pFpa3\"};","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = ({message, mine}) => {\r\n    const styleMsg = factor => factor ? classes.right : classes.left;\r\n\r\n    return (\r\n        <div className={`${classes.message} ${styleMsg(mine)}`}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport Message from \"./Message/Message\";\r\n\r\nimport classes from './Messages.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Messages = ({sendMessageTC, dialogsPage}) => {\r\n    const {messages} = dialogsPage;\r\n\r\n    const messagesElements = messages.map(el => <Message id={el.id} mine={el.mine} key={el.id} message={el.message}/>);\r\n\r\n    const addNewMessage = values => {\r\n        sendMessageTC(values.messageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.messages} component--wrap`}>\r\n            <h3 className={classes.title}>Messages</h3>\r\n            <div className={classes.messageList}>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form className={classes.inputs} onSubmit={handleSubmit}>\r\n            <Field component={Input} name={\"messageBody\"} placeholder={`Type your message...`}\r\n                   className={classes.textarea} validate={[required, maxLength300]}/>\r\n            <Button className={classes.add}>Send</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Messages;\r\n","import {sendMessageTC} from \"../../redux/Dialogs/dialogs-reducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsPage} from \"../../redux/Dialogs/dialogs-selectors\";\r\n\r\nconst mapStateToProps = state => ({dialogsPage: getDialogsPage(state)});\r\n\r\nconst mapDispatchToProps = {sendMessageTC};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages);\r\n"],"sourceRoot":""}