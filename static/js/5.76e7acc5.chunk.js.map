{"version":3,"sources":["components/common/FormControls/FormControls.js","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","className","container","children","Textarea","input","placeholder","Input","type","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","to","React","connect","DialogItem","name","id","activeClassName","active","dialog","Message","factor","message","mine","right","left","maxLength300","AddMessageFormRedux","reduxForm","form","inputs","onSubmit","handleSubmit","Field","component","textarea","validate","add","Dialogs","sendMessage","dialogsPage","dialogs","messages","dialogsElements","map","el","messagesElements","dialogsItems","title","dialogsList","messageList","values","messageBody","mapDispatchToProps","compose"],"mappings":"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","file":"static/js/5.76e7acc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n    const hasError = props.meta.error && props.meta.touched;\r\n    const errorClass = hasError ? classes.error : \"\";\r\n    const errorMessage = hasError ? <small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n    return (\r\n        <div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n            {props.children}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = props => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...props.input} className={classes.input} placeholder={props.placeholder} type={props.type}/>\r\n        </FormControl>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1O6pH\",\"input\":\"FormControls_input__1vNYD\",\"error\":\"FormControls_error__R3-iJ\",\"errorMessage\":\"FormControls_errorMessage__znvpV\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render = () => {\r\n            return !this.props.isAuth\r\n                ? <Redirect to={'/login'}/>\r\n                : <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2RgAD\",\"active\":\"DialogItem_active__2qoP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__12L5C\",\"left\":\"Message_left__1HKDw\",\"right\":\"Message_right__1-Vt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__XTLmz\",\"dialogsItems\":\"Dialogs_dialogsItems__nzZOP\",\"dialogsList\":\"Dialogs_dialogsList__2Ly4n\",\"title\":\"Dialogs_title__4fiJE\",\"messages\":\"Dialogs_messages__twfqX\",\"messageList\":\"Dialogs_messageList__1rNZN\",\"inputs\":\"Dialogs_inputs__2i4Zf\",\"textarea\":\"Dialogs_textarea__2LIt_\",\"add\":\"Dialogs_add__Ji_0I\"};","import {NavLink} from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = ({name, id}) => {\r\n    return (\r\n        <NavLink to={`/dialogs/${id}`} activeClassName={classes.active} className={classes.dialog}>{name}</NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = ({message, mine}) => {\r\n    let styleMsg = (factor) => {\r\n        if (factor) return classes.right;\r\n\r\n        return classes.left;\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.message} ${styleMsg(mine)}`}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport classes from './Dialogs.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Dialogs = ({sendMessage, dialogsPage}) => {\r\n    const {dialogs, messages} = dialogsPage;\r\n\r\n    const dialogsElements = dialogs.map(el => <DialogItem name={el.name} key={el.id} id={el.id}/>);\r\n    const messagesElements = messages.map(el => <Message id={el.id} mine={el.mine} key={el.id} message={el.message}/>);\r\n\r\n    const addNewMessage = values => {\r\n        sendMessage(values.messageBody);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogsItems}>\r\n                    <h3 className={classes.title}>Dialogs</h3>\r\n                    <div className={classes.dialogsList}>{dialogsElements}</div>\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    <h3 className={classes.title}>Messages</h3>\r\n                    <div className={classes.messageList}>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form className={classes.inputs} onSubmit={props.handleSubmit}>\r\n            <Field component={Input} type=\"text\" name={\"messageBody\"} placeholder={`Type your message...`}\r\n                   className={classes.textarea} validate={[required, maxLength300]}/>\r\n            <button name={\"messageSubmit\"} type=\"submit\" className={classes.add}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = state => ({dialogsPage: state.dialogsPage});\r\n\r\nconst mapDispatchToProps = {sendMessage};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}