{"version":3,"sources":["components/common/FormControls/FormControls.js","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJob.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileContacts/ProfileContacts.module.css","components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileContacts/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJob.jsx","components/Profile/ProfileInfo/ProfileAvatar/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileAvatar/ProfileStatus/ProfileStatusContainer.jsx","components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.jsx","components/Profile/ProfileInfo/ProfileAbout/ProfileAbout.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","className","container","children","Textarea","input","placeholder","Input","type","required","value","maxLengthCreator","maxLength","length","module","exports","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileContacts","contacts","contactsListJSX","link","href","profileContacts","contactsSocial","ProfileJob","lookingForAJob","lookingForAJobDescription","profileJob","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","onDoubleClick","mapDispatchToProps","compose","profilePage","ProfileAvatar","photos","fullName","userId","isOwner","profileMainInfo","profileAvatar","large","src","alt","small","substr","toUpperCase","target","files","savePhoto","profileStatus","profileName","ProfileStatusContainer","profileId","ProfileAbout","aboutMe","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","onSubmit","Field","name","validate","component","keys","map","key","ProfileInfo","headImg","formData","updateProfile","then","initialValues","profileUser","onClick","Post","message","likesCount","post","maxLength300","MyPosts","memo","addPost","postsElements","posts","el","id","AddPostFormRedux","values","newPost","inputWrap","textarea","add","MyPostsContainer","Profile","Preloader","ProfileContainer","refreshProfile","match","params","authorizedUserId","history","getProfile","getUserStatus","this","prevProps","prevState","withRouter"],"mappings":"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","file":"static/js/4.036cd6b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n    const hasError = props.meta.error && props.meta.touched;\r\n    const errorClass = hasError ? classes.error : \"\";\r\n    const errorMessage = hasError ? <small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n    return (\r\n        <div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n            {props.children}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = props => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...props.input} className={classes.input} placeholder={props.placeholder} type={props.type}/>\r\n        </FormControl>\r\n    )\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1O6pH\",\"input\":\"FormControls_input__1vNYD\",\"error\":\"FormControls_error__R3-iJ\",\"errorMessage\":\"FormControls_errorMessage__znvpV\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render = () => {\r\n            return !this.props.isAuth\r\n                ? <Redirect to={'/login'}/>\r\n                : <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileJob\":\"ProfileJob_profileJob__3F2Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headImg\":\"ProfileInfo_headImg__1M-eY\",\"profileUser\":\"ProfileInfo_profileUser__23b78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContacts\":\"ProfileContacts_profileContacts__2iIrN\",\"contactsSocial\":\"ProfileContacts_contactsSocial__1rvOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainInfo\":\"ProfileAvatar_profileMainInfo__2wiB4\",\"profileAvatar\":\"ProfileAvatar_profileAvatar__3rN8r\",\"profileStatus\":\"ProfileAvatar_profileStatus__345zG\",\"profileId\":\"ProfileAvatar_profileId__1zg-v\",\"profileName\":\"ProfileAvatar_profileName__YYdT2\",\"profileDesc\":\"ProfileAvatar_profileDesc__3thaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__Yp48r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"MyPosts_inputWrap__3Un3B\",\"add\":\"MyPosts_add__2Sfc9\",\"textarea\":\"MyPosts_textarea__TGCmf\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport classes from \"./ProfileContacts.module.css\";\r\n\r\nconst ProfileContacts = ({contacts, ...props}) => {\r\n    const contactsListJSX = [];\r\n\r\n    for (let link in contacts) {\r\n        if (contacts[link]) {\r\n            contactsListJSX.push(<a href={`${contacts[link]}`}>{link}</a>)\r\n        }\r\n    }\r\n\r\n    if (contactsListJSX.length > 0) {\r\n        return (\r\n            <div className={classes.profileContacts}>\r\n                <h2>Contacts</h2>\r\n                <div className={classes.contactsSocial}>\r\n                    {contactsListJSX}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return \"\";\r\n}\r\n\r\nexport default ProfileContacts;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileJob.module.css\";\r\n\r\nconst ProfileJob = ({lookingForAJob, lookingForAJobDescription, ...props}) => {\r\n\r\n    return (\r\n        <div className={classes.profileJob}>\r\n            <h2>Search for a job</h2>\r\n            <p>\r\n                <span>{lookingForAJob ? \"Looking for a job.\" : \"Not looking for a job.\"}</span>\r\n                {lookingForAJobDescription}\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileJob;\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = (e) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n                </div>\r\n                : <div>\r\n                    <input autoFocus onChange={onInputChange} value={status} onBlur={deactivateEditMode} type=\"text\"/>\r\n                </div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateStatus} from \"../../../../../redux/profile-reducer\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.profilePage.status,\r\n})\r\n\r\nconst mapDispatchToProps = {updateStatus}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ProfileStatusWithHooks);\r\n","import React from \"react\";\r\nimport classes from \"./ProfileAvatar.module.css\";\r\nimport ProfileStatusContainer from \"./ProfileStatus/ProfileStatusContainer\";\r\n\r\nconst ProfileAvatar = ({photos, fullName, userId, isOwner, ...props}) => {\r\n    const onSelectMainPhoto = e => {\r\n        const photos = e.target.files;\r\n        if (photos.length) {\r\n            props.savePhoto(photos[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileMainInfo}>\r\n            <div className={classes.profileAvatar}>\r\n                {photos.large ? (\r\n                    <img src={photos.large} alt=\"avatar\"/>\r\n                ) : photos.small ? (\r\n                    <img src={photos.small} alt=\"avatar\"/>\r\n                ) : <span>{fullName.substr(0, 1).toUpperCase()}</span>}\r\n            </div>\r\n            <div>{isOwner ? <input type={\"file\"} onChange={onSelectMainPhoto}/> : \"\"}</div>\r\n            <div className={classes.profileStatus}>\r\n                <div className={classes.profileName}>{fullName}</div>\r\n                <ProfileStatusContainer/>\r\n            </div>\r\n            <div className={classes.profileId}>{userId}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import React from \"react\";\r\nimport classes from \"../ProfileJob/ProfileJob.module.css\";\r\n\r\nconst ProfileAbout = ({aboutMe, ...props}) => {\r\n    if (!aboutMe) {\r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileJob}>\r\n            <h2>About me</h2>\r\n            <p>{aboutMe}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <label>\r\n                <h2>FullName</h2>\r\n                <Field placeholder={\"FullName\"} name={\"fullName\"}\r\n                       validate={[required]} component={Input} type={\"text\"}/>\r\n            </label>\r\n            <label>\r\n                <h2>About Me</h2>\r\n                <Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\r\n            </label>\r\n            <label>\r\n                <h2>Looking for a job?</h2>\r\n                <Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n            </label>\r\n            <label>\r\n                <h2>Description for a looking job</h2>\r\n                <Field placeholder={\"Description for a looking job\"} name={\"lookingForAJobDescription\"}\r\n                       component={Textarea}/>\r\n            </label>\r\n            <div>\r\n                <h2>Contacts</h2>\r\n                <div>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <label key={key}>\r\n                            <strong>{key}</strong>\r\n                            <Field name={`contacts.${key}`} component={Input} type={\"text\"}\r\n                                   placeholder={`https://${key}/`}/>\r\n                        </label>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {error\r\n            ? <div>{error}</div>\r\n            : \"\"\r\n        }\r\n        <button>Save changes</button>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: \"editProfile\"})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormRedux;\r\n","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileContacts from \"./ProfileContacts/ProfileContacts\";\r\nimport ProfileJob from \"./ProfileJob/ProfileJob\";\r\nimport ProfileAvatar from \"./ProfileAvatar/ProfileAvatar\";\r\nimport ProfileAbout from \"./ProfileAbout/ProfileAbout\";\r\nimport ProfileDataFormRedux from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({isOwner, profile, ...props}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        if (isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    const deActivateMode = formData => {\r\n        props.updateProfile(formData)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={classes.headImg}\r\n                     src=\"https://s23527.pcdn.co/wp-content/uploads/2020/01/100k-moon.jpg.optimal.jpg\" alt=\"planet\"/>\r\n            </div>\r\n            {!editMode\r\n                ? <div className={classes.profileUser}>\r\n                    <ProfileAvatar fullName={profile.fullName} photos={profile.photos}\r\n                                   userId={profile.userId} isOwner={isOwner} savePhoto={props.savePhoto}/>\r\n                    <ProfileAbout aboutMe={profile.aboutMe}/>\r\n                    <ProfileJob lookingForAJob={profile.lookingForAJob}\r\n                                lookingForAJobDescription={profile.lookingForAJobDescription}/>\r\n                    <ProfileContacts contacts={profile.contacts}/>\r\n                </div>\r\n                : <ProfileDataFormRedux onSubmit={deActivateMode} profile={profile} initialValues={profile}/>}\r\n            {!editMode && isOwner\r\n                ? <button onClick={activateEditMode}>Edit profile</button>\r\n                : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\n\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = ({message, likesCount}) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <p>{message}</p>\r\n            <small>Like</small>\r\n            <small>{likesCount}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n\r\nimport classes from './MyPosts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let {addPost, profilePage} = props;\r\n\r\n    const {posts} = profilePage;\r\n\r\n    const postsElements = posts.map(el => (\r\n        <Post message={el.post} key={el.id} likesCount={el.likesCount}/>\r\n    ));\r\n\r\n    const addNewPost = values => {\r\n        addPost(values.newPost);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>My posts</h2>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.inputWrap}>\r\n            <Field component={Textarea} name={\"newPost\"} placeholder={`Type your post...`}\r\n                   className={classes.textarea} validate={[required, maxLength300]}/>\r\n            <button className={classes.add}>Add post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postForm\"})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    profilePage: state.profilePage\r\n})\r\n\r\nconst mapDispatchToProps = {addPost};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} savePhoto={props.savePhoto}\r\n                         updateProfile={props.updateProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getUserStatus, savePhoto, updateProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render = () => <Profile\r\n        isOwner={!this.props.match.params.userId}\r\n        {...this.props}\r\n        savePhoto={this.props.savePhoto}\r\n        updateProfile={this.props.updateProfile}/>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {getProfile, getUserStatus, savePhoto, updateProfile}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}