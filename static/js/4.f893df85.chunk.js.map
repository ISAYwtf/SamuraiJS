{"version":3,"sources":["components/common/FormControls/FormControls.js","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJob.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileContacts/ProfileContacts.module.css","components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfo.module.css","components/Profile/ProfileInfo/ProfileMainInfo/ProfileAvatar/ProfileAvatar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Posts.module.css","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.css","components/Profile/ProfileInfo/ProfileContacts/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJob.jsx","components/Profile/ProfileInfo/ProfileMainInfo/ProfileStatus/ProfileStatus.jsx","redux/Profile/profile-selectors.js","components/Profile/ProfileInfo/ProfileMainInfo/ProfileStatus/ProfileStatusContainer.jsx","components/Profile/ProfileInfo/ProfileMainInfo/ProfileAvatar/index.js","components/Profile/ProfileInfo/ProfileMainInfo/ProfileAvatar/ProfileAvatar.jsx","components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfo.jsx","components/Profile/ProfileInfo/ProfileAbout/ProfileAbout.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Posts.jsx","components/Profile/MyPosts/PostsContainer.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","className","container","children","Textarea","input","placeholder","Input","attr","type","required","value","maxLengthCreator","maxLength","length","composeValidators","validators","reduce","validator","undefined","module","exports","mapStateToPropsRedirect","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","render","to","React","connect","ProfileContacts","contacts","contactsListJSX","link","push","href","profileContacts","contactsSocial","ProfileJob","lookingForAJob","lookingForAJobDescription","profileJob","ProfileStatusForm","initialValues","onSubmit","deactivateEditMode","handleSubmit","submit","e","component","name","ProfileStatus","isOwner","match","params","userId","useState","editMode","setEditMode","status","updateStatus","onDoubleClick","getProfilePageState","profilePage","getProfileState","profile","getProfileFetching","isFetching","getProfileStatus","mapDispatchToProps","compose","withRouter","ProfileAvatar","profileImage","photos","fullName","large","src","alt","small","imgName","substr","toUpperCase","profileImageWrap","SelectPhotoButton","savePhoto","selectMsg","selectImgBtn","onChange","target","files","ProfileMainInfo","profileMainInfo","profileAvatar","profileStatus","profileName","ProfileStatusContainer","profileId","ProfileAbout","aboutMe","ProfileInfo","profileUser","Post","message","likesCount","post","maxLength300","Posts","memo","addPostTC","postsElements","posts","map","el","id","AddPostFormRedux","values","newPost","reduxForm","form","inputWrap","Field","textarea","validate","Button","add","PostsContainer","ProfileDataForm","Object","keys","key","contactItem","contactItemTitle","Profile","formData","updateProfile","then","Preloader","refreshProfile","authorizedUserId","getProfile","getUserStatus","history","a","toggleIsFetching","getAuthorizedId","useEffect","response","flag"],"mappings":"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","file":"static/js/4.f893df85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n    const hasError = props.meta.error && props.meta.touched;\r\n    const errorClass = hasError ? classes.error : \"\";\r\n    const errorMessage = hasError ? <small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n    return (\r\n        <div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n            {props.children}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props =>\r\n    <FormControl {...props}>\r\n        <textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n    </FormControl>\r\n\r\nexport const Input = props =>\r\n    <FormControl {...props}>\r\n        <input {...props.input} className={classes.input} {...props.attr}\r\n               placeholder={props.placeholder || \"\"} type={props.type || \"text\"}/>\r\n    </FormControl>\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1O6pH\",\"input\":\"FormControls_input__1vNYD\",\"error\":\"FormControls_error__R3-iJ\",\"errorMessage\":\"FormControls_errorMessage__znvpV\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../redux/Auth/auth-selectors\";\r\n\r\nconst mapStateToPropsRedirect = state => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render = () => {\r\n            return !this.props.isAuth\r\n                ? <Redirect to={'/login'}/>\r\n                : <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileJob\":\"ProfileJob_profileJob__3F2Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileUser\":\"ProfileInfo_profileUser__23b78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContacts\":\"ProfileContacts_profileContacts__2iIrN\",\"contactsSocial\":\"ProfileContacts_contactsSocial__1rvOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainInfo\":\"ProfileMainInfo_profileMainInfo__3NzMv\",\"profileAvatar\":\"ProfileMainInfo_profileAvatar__MMbga\",\"profileStatus\":\"ProfileMainInfo_profileStatus__1IAb6\",\"profileId\":\"ProfileMainInfo_profileId__2f4OG\",\"profileName\":\"ProfileMainInfo_profileName__1YqG0\",\"profileDesc\":\"ProfileMainInfo_profileDesc__2naDA\",\"selectImgBtn\":\"ProfileMainInfo_selectImgBtn__2G56V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImageWrap\":\"ProfileAvatar_profileImageWrap__1mmfB\",\"profileImage\":\"ProfileAvatar_profileImage__et5X_\",\"imgName\":\"ProfileAvatar_imgName__1boYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__Yp48r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"Posts_inputWrap__2apF8\",\"textarea\":\"Posts_textarea__2X9bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__1-8Jo\",\"contactItem\":\"ProfileDataForm_contactItem__2npvs\",\"contactItemTitle\":\"ProfileDataForm_contactItemTitle__1rNjO\"};","import React from \"react\";\r\nimport classes from \"./ProfileContacts.module.css\";\r\n\r\nconst ProfileContacts = ({contacts, ...props}) => {\r\n    const contactsListJSX = [];\r\n\r\n    for (let link in contacts) {\r\n        if (contacts[link]) {\r\n            contactsListJSX.push(<a href={`${contacts[link]}`}>{link}</a>)\r\n        }\r\n    }\r\n\r\n    if (contactsListJSX.length > 0) {\r\n        return (\r\n            <div className={classes.profileContacts}>\r\n                <h2>Contacts</h2>\r\n                <div className={classes.contactsSocial}>\r\n                    {contactsListJSX}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return \"\";\r\n}\r\n\r\nexport default ProfileContacts;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileJob.module.css\";\r\n\r\nconst ProfileJob = ({lookingForAJob, lookingForAJobDescription, ...props}) => {\r\n\r\n    return (\r\n        <div className={classes.profileJob}>\r\n            <h2>Search for a job</h2>\r\n            <p>\r\n                <span>{lookingForAJob ? \"Looking for a job.\" : \"Not looking for a job.\"}</span>\r\n                {lookingForAJobDescription}\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileJob;\r\n","import React, {useState} from \"react\";\r\nimport {Form, Field} from \"react-final-form\";\r\nimport {Input} from \"../../../../common/FormControls/FormControls\";\r\n\r\nconst ProfileStatusForm = props => {\r\n    return (\r\n        <Form initialValues={props.initialValues} onSubmit={props.deactivateEditMode}>\r\n            {({handleSubmit}) => {\r\n                const submit = handleSubmit;\r\n                const attr = {\r\n                    \"autoFocus\": true,\r\n                    \"onBlur\": e => submit(e)\r\n                };\r\n\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field component={Input} name={\"status\"} attr={attr}\r\n                               type=\"text\"/>\r\n                    </form>\r\n                )\r\n            }}\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst ProfileStatus = props => {\r\n\r\n    const isOwner = !props.match.params.userId;\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        if (isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = (status) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status.status);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? isOwner\r\n                    ? <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n                    </div>\r\n                    : <div>\r\n                        <span>{props.status}</span>\r\n                    </div>\r\n                : <ProfileStatusForm initialValues={{\"status\": props.status}}\r\n                                     deactivateEditMode={deactivateEditMode}/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;\r\n","export const getProfilePageState = state => state.profilePage\r\nexport const getProfileState = state => state.profilePage.profile\r\nexport const getProfileFetching = state => state.profilePage.isFetching\r\nexport const getProfileStatus = state => state.profilePage.status\r\n","import {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateStatus} from \"../../../../../redux/Profile/profile-reducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfileStatus} from \"../../../../../redux/Profile/profile-selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    status: getProfileStatus(state),\r\n})\r\n\r\nconst mapDispatchToProps = {updateStatus}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(ProfileStatus);\r\n","import ProfileAvatar from \"./ProfileAvatar\";\r\n\r\nexport default ProfileAvatar;\r\n","import classes from \"./ProfileAvatar.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ProfileAvatar = ({photos, fullName}) => {\r\n    let profileImage;\r\n    if (photos.large) {\r\n        profileImage = <img className={classes.profileImage} src={photos.large} alt=\"avatar\"/>;\r\n    } else {\r\n        profileImage = photos.small\r\n            ? <img className={classes.profileImage} src={photos.small} alt=\"avatar\"/>\r\n            : <span className={classes.imgName}>{fullName.substr(0, 1).toUpperCase()}</span>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileImageWrap}>\r\n            {profileImage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileMainInfo.module.css\";\r\nimport ProfileStatusContainer from \"./ProfileStatus/ProfileStatusContainer\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\n\r\nconst SelectPhotoButton = ({isOwner, savePhoto}) => {\r\n    let selectMsg = \"Select your image\";\r\n\r\n    const onSelectMainPhoto = e => {\r\n        const photos = e.target.files;\r\n        if (photos.length) {\r\n            savePhoto(photos[0]);\r\n            selectMsg = photos[0];\r\n        }\r\n    }\r\n\r\n    if (isOwner) {\r\n        return <label className={classes.selectImgBtn}>\r\n            <span>{selectMsg}</span>\r\n            <input type={\"file\"} onChange={onSelectMainPhoto}/>\r\n        </label>\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst ProfileMainInfo = ({photos, fullName, userId, isOwner, ...props}) => {\r\n\r\n    return (\r\n        <div className={classes.profileMainInfo}>\r\n\r\n            <div className={classes.profileAvatar}>\r\n                <ProfileAvatar photos={photos} fullName={fullName}/>\r\n                <SelectPhotoButton isOwner={isOwner} savePhoto={props.savePhoto}/>\r\n            </div>\r\n\r\n            <div className={classes.profileStatus}>\r\n                <div className={classes.profileName}>{fullName}</div>\r\n                <ProfileStatusContainer/>\r\n            </div>\r\n\r\n            <div className={classes.profileId}>{userId}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileMainInfo;\r\n","import React from \"react\";\r\nimport classes from \"../ProfileJob/ProfileJob.module.css\";\r\n\r\nconst ProfileAbout = ({aboutMe, ...props}) => {\r\n    if (!aboutMe) {\r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileJob}>\r\n            <h2>About me</h2>\r\n            <p>{aboutMe}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileContacts from \"./ProfileContacts/ProfileContacts\";\r\nimport ProfileJob from \"./ProfileJob/ProfileJob\";\r\nimport ProfileMainInfo from \"./ProfileMainInfo/ProfileMainInfo\";\r\nimport ProfileAbout from \"./ProfileAbout/ProfileAbout\";\r\n\r\nconst ProfileInfo = ({isOwner, profile, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.profileUser}>\r\n                <ProfileMainInfo fullName={profile.fullName} photos={profile.photos}\r\n                               userId={profile.userId} isOwner={isOwner} savePhoto={props.savePhoto}/>\r\n                <ProfileAbout aboutMe={profile.aboutMe}/>\r\n                <ProfileJob lookingForAJob={profile.lookingForAJob}\r\n                            lookingForAJobDescription={profile.lookingForAJobDescription}/>\r\n                <ProfileContacts contacts={profile.contacts}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\n\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = ({message, likesCount}) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <p>{message}</p>\r\n            <small>Like</small>\r\n            <small>{likesCount}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n\r\nimport classes from './Posts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport Button from \"../../common/Button\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Posts = React.memo(props => {\r\n    let {addPostTC, profilePage} = props;\r\n\r\n    const {posts} = profilePage;\r\n\r\n    const postsElements = posts.map(el => (\r\n        <Post message={el.post} key={el.id} likesCount={el.likesCount}/>\r\n    ));\r\n\r\n    const addNewPost = values => {\r\n        addPostTC(values.newPost);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>My posts</h2>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.inputWrap}>\r\n            <Field component={Textarea} name={\"newPost\"} placeholder={`Type your post...`}\r\n                   className={classes.textarea} validate={[required, maxLength300]}/>\r\n            <Button className={classes.add}>Add post</Button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postForm\"})(AddPostForm);\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport {addPostTC} from \"../../../redux/Profile/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilePageState} from \"../../../redux/Profile/profile-selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    profilePage: getProfilePageState(state)\r\n})\r\n\r\nconst mapDispatchToProps = {addPostTC};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\nimport {Form, Field} from \"react-final-form\";\r\nimport {Input, Textarea} from \"../../../common/FormControls/FormControls\";\r\nimport {required, composeValidators} from \"../../../../utils/validators/validators\";\r\nimport Button from \"../../../common/Button\";\r\nimport classes from \"./ProfileDataForm.module.css\";\r\n\r\nconst ProfileDataForm = props =>\r\n    <Form onSubmit={props.onSubmit} initialValues={props.initialValues} profile={props.profile}>\r\n        {({handleSubmit, profile, error}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={classes.form}>\r\n                    <label>\r\n                        <h2>FullName</h2>\r\n                        <Field placeholder={\"FullName\"} name={\"fullName\"}\r\n                               validate={composeValidators(required)} component={Input} type={\"text\"}/>\r\n                    </label>\r\n                    <label>\r\n                        <h2>About Me</h2>\r\n                        <Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\r\n                    </label>\r\n                    <label>\r\n                        <h2>Looking for a job?</h2>\r\n                        <Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n                    </label>\r\n                    <label>\r\n                        <h2>Description for a looking job</h2>\r\n                        <Field placeholder={\"Description for a looking job\"} name={\"lookingForAJobDescription\"}\r\n                               component={Textarea}/>\r\n                    </label>\r\n                    <div>\r\n                        <h2>Contacts</h2>\r\n                        <div>\r\n                            {Object.keys(profile.contacts).map(key => {\r\n                                return <label className={classes.contactItem} key={key}>\r\n                                    <strong className={classes.contactItemTitle}>{key}</strong>\r\n                                    <Field name={`contacts.${key}`} component={Input} type={\"text\"}\r\n                                           placeholder={`https://${key}/`}/>\r\n                                </label>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {error\r\n                    ? <div>{error}</div>\r\n                    : \"\"\r\n                }\r\n                <Button>Save changes</Button>\r\n            </form>\r\n        )}\r\n\r\n    </Form>\r\n\r\nexport default ProfileDataForm;\r\n","import React, {useState} from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./MyPosts/PostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Button from \"../common/Button\";\r\nimport ProfileDataForm from \"./ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\n\r\nconst Profile = ({isOwner, profile, ...props}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        if (isOwner) setEditMode(true);\r\n    }\r\n\r\n    const deActivateMode = formData => {\r\n        props.updateProfile(formData)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    if (!profile) return <Preloader/>\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <ProfileInfo isOwner={isOwner} profile={profile} savePhoto={props.savePhoto}\r\n                         updateProfile={props.updateProfile}/>\r\n                : <ProfileDataForm onSubmit={deActivateMode} profile={profile} initialValues={profile}/>}\r\n            {!editMode && isOwner\r\n                ? <Button attr={{\"onClick\": activateEditMode}}>Edit profile</Button>\r\n                : \"\"}\r\n            <PostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getUserStatus, savePhoto, toggleIsFetching, updateProfile} from \"../../redux/Profile/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getProfileFetching, getProfileState} from \"../../redux/Profile/profile-selectors\";\r\nimport {getAuthorizedId, getIsAuth} from \"../../redux/Auth/auth-selectors\";\r\n\r\nconst refreshProfile = async (id, authorizedUserId, getProfile, getUserStatus, history) => {\r\n    let userId = id;\r\n    if (!userId) {\r\n        userId = authorizedUserId;\r\n        if (!userId) {\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    await getProfile(userId);\r\n    getUserStatus(userId);\r\n\r\n}\r\n\r\nconst ProfileContainer = props => {\r\n    const {match, authorizedUserId, getProfile, getUserStatus} = props;\r\n\r\n    useEffect(() => {\r\n        props.toggleIsFetching(true);\r\n        refreshProfile(match.params.userId, authorizedUserId, getProfile, getUserStatus, props.history)\r\n            .then(response => props.toggleIsFetching(false));\r\n    }, [match.params.userId])\r\n\r\n    if (props.isFetching) return <Preloader flag={props.isFetching}/>\r\n\r\n    return <Profile isOwner={!match.params.userId} {...props}/>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: getProfileState(state),\r\n    authorizedUserId: getAuthorizedId(state),\r\n    isAuth: getIsAuth(state),\r\n    isFetching: getProfileFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = {getProfile, getUserStatus, savePhoto, updateProfile, toggleIsFetching}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}