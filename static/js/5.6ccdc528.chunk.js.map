{"version":3,"sources":["components/common/FormControls/FormControls.js","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","redux/Dialogs/dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","className","container","children","Textarea","input","placeholder","Input","attr","type","required","value","maxLengthCreator","maxLength","length","composeValidators","validators","reduce","validator","undefined","module","exports","mapStateToPropsRedirect","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","render","to","React","connect","DialogItem","name","id","activeClassName","active","dialog","Message","factor","message","mine","right","left","maxLength300","AddMessageFormRedux","reduxForm","form","handleSubmit","inputs","onSubmit","Field","component","textarea","validate","Button","add","Dialogs","sendMessageTC","dialogsPage","dialogs","messages","dialogsElements","map","el","messagesElements","dialogsItems","title","dialogsList","messageList","values","messageBody","getDialogsPage","mapDispatchToProps","compose"],"mappings":"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","file":"static/js/5.6ccdc528.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n    const hasError = props.meta.error && props.meta.touched;\r\n    const errorClass = hasError ? classes.error : \"\";\r\n    const errorMessage = hasError ? <small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n    return (\r\n        <div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n            {props.children}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props =>\r\n    <FormControl {...props}>\r\n        <textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n    </FormControl>\r\n\r\nexport const Input = props =>\r\n    <FormControl {...props}>\r\n        <input {...props.input} className={classes.input} {...props.attr}\r\n               placeholder={props.placeholder || \"\"} type={props.type || \"text\"}/>\r\n    </FormControl>\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__1O6pH\",\"input\":\"FormControls_input__1vNYD\",\"error\":\"FormControls_error__R3-iJ\",\"errorMessage\":\"FormControls_errorMessage__znvpV\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../redux/Auth/auth-selectors\";\r\n\r\nconst mapStateToPropsRedirect = state => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render = () => {\r\n            return !this.props.isAuth\r\n                ? <Redirect to={'/login'}/>\r\n                : <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2RgAD\",\"active\":\"DialogItem_active__2qoP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__12L5C\",\"left\":\"Message_left__1HKDw\",\"right\":\"Message_right__1-Vt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__XTLmz\",\"dialogsItems\":\"Dialogs_dialogsItems__nzZOP\",\"dialogsList\":\"Dialogs_dialogsList__2Ly4n\",\"title\":\"Dialogs_title__4fiJE\",\"messages\":\"Dialogs_messages__twfqX\",\"messageList\":\"Dialogs_messageList__1rNZN\",\"inputs\":\"Dialogs_inputs__2i4Zf\",\"textarea\":\"Dialogs_textarea__2LIt_\",\"add\":\"Dialogs_add__Ji_0I\"};","import {NavLink} from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = ({name, id}) => {\r\n    return (\r\n        <NavLink to={`/dialogs/${id}`} activeClassName={classes.active} className={classes.dialog}>{name}</NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = ({message, mine}) => {\r\n    let styleMsg = (factor) => {\r\n        if (factor) return classes.right;\r\n\r\n        return classes.left;\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.message} ${styleMsg(mine)}`}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport classes from './Dialogs.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Dialogs = ({sendMessageTC, dialogsPage}) => {\r\n    const {dialogs, messages} = dialogsPage;\r\n\r\n    const dialogsElements = dialogs.map(el => <DialogItem name={el.name} key={el.id} id={el.id}/>);\r\n    const messagesElements = messages.map(el => <Message id={el.id} mine={el.mine} key={el.id} message={el.message}/>);\r\n\r\n    const addNewMessage = values => {\r\n        sendMessageTC(values.messageBody);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogsItems}>\r\n                    <h3 className={classes.title}>Dialogs</h3>\r\n                    <div className={classes.dialogsList}>{dialogsElements}</div>\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    <h3 className={classes.title}>Messages</h3>\r\n                    <div className={classes.messageList}>{messagesElements}</div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form className={classes.inputs} onSubmit={handleSubmit}>\r\n            <Field component={Input} name={\"messageBody\"} placeholder={`Type your message...`}\r\n                   className={classes.textarea} validate={[required, maxLength300]}/>\r\n            <Button className={classes.add}>Send</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","export const getDialogsPage = state => state.dialogsPage\r\n","import {sendMessageTC} from \"../../redux/Dialogs/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsPage} from \"../../redux/Dialogs/dialogs-selectors\";\r\n\r\nconst mapStateToProps = state => ({dialogsPage: getDialogsPage(state)});\r\n\r\nconst mapDispatchToProps = {sendMessageTC};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}