{"version":3,"sources":["components/Users/Users.module.css","components/common/Pagination/Pagination.module.css","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/Users/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","PaginationItem","currentNumber","currentPage","pageSize","props","isActive","item","classes","paginationActive","className","span","onClick","pageNumber","setCurrentPage","getUsers","onPageChanged","Pagination","pagination","paginationWrap","totalItemsCount","pagesCount","Math","ceil","pages","i","push","length","map","el","arr","borderLeft","borderRight","createPagination","UserImage","img","name","userId","avatarImage","src","alt","substr","toUpperCase","UserAvatar","flag","user","userAvatar","photos","small","id","disabled","isFollowing","some","avatarButton","e","preventDefault","unFollowTo","followTo","checkFollowing","followed","UserInfo","userInfo","infoName","infoStatus","status","User","to","Users","usersWrap","Preloader","isFetching","users","getUsersState","state","usersPage","getPageSizeState","getTotalUsersCountState","totalUsersCount","getCurrentPageState","getIsFetchingState","getIsFollowingState","mapDispatchToProps","compose","connect","useEffect"],"mappings":"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","file":"static/js/9.e591dfc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrap\":\"Users_usersWrap__32bq6\",\"user\":\"Users_user__27qfH\",\"userInfo\":\"Users_userInfo__3V-av\",\"userAvatar\":\"Users_userAvatar__1A0gP\",\"avatarImage\":\"Users_avatarImage__1eJh0\",\"avatarButton\":\"Users_avatarButton__3EVYl\",\"infoName\":\"Users_infoName__2HV7s\",\"infoStatus\":\"Users_infoStatus__D4Vk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1zpVU\",\"paginationWrap\":\"Pagination_paginationWrap__1ZZki\",\"span\":\"Pagination_span__28iOd\",\"paginationActive\":\"Pagination_paginationActive__2S1bc\",\"borderLeft\":\"Pagination_borderLeft__3LYwN\",\"borderRight\":\"Pagination_borderRight__2ihTP\"};","import React from 'react';\r\nimport classes from './Pagination.module.css';\r\n\r\nconst onPageChanged = (pageNumber, pageSize, setCurrentPage, getUsers) => {\r\n    setCurrentPage(pageNumber);\r\n    getUsers(pageNumber, pageSize);\r\n}\r\n\r\nconst PaginationItem = ({currentNumber, currentPage, pageSize, ...props}) => {\r\n\r\n    const isActive = currentPage === currentNumber || (typeof props.item === \"number\" && currentPage === props.item)\r\n        ? classes.paginationActive : \"\";\r\n\r\n    let className = props.className ? props.className : \"\";\r\n    className = className || isActive ? `${className} ${isActive} ${classes.span}` : classes.span;\r\n\r\n    return <span onClick={() => onPageChanged(currentNumber, pageSize, props.setCurrentPage, props.getUsers)}\r\n                 className={className} key={currentNumber}>\r\n        {props.item ? props.item : currentNumber}\r\n    </span>;\r\n}\r\n\r\nconst Pagination = props => {\r\n\r\n    const createPagination = () => {\r\n        const {totalItemsCount, pageSize, currentPage, setCurrentPage, getUsers} = props;\r\n\r\n        const pagesCount = Math.ceil(totalItemsCount / pageSize); // Количество страниц\r\n        const pages = [];\r\n\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i); // Массив с числами для пагинатора\r\n        }\r\n\r\n        let pagination; // Пагинатор\r\n\r\n        if (pages.length > 10) { // Если страниц больше 10\r\n\r\n            // Далее возвращаем в переменную пагинатора массив с обернутыми числами в разметку\r\n            pagination = pages.map((el, i, arr) => {\r\n\r\n                /* Если перебираемое число входит в первые или в последние три\r\n                * или является текущим элементом\r\n                * возвращаем элемент с числом */\r\n                if ((el >= 1 && el < 4) || (el > arr.length - 3 && el <= arr.length)) {\r\n                    return <PaginationItem currentNumber={el} currentPage={currentPage} pageSize={pageSize}\r\n                                           setCurrentPage={setCurrentPage} getUsers={getUsers}/>\r\n\r\n                    /* Иначе если текущее число стоит рядом с текущим элементом\r\n                    * возвращаем стрелку влево или вправо, для клика на следующий элемент от текущего*/\r\n                } else if (el === 4 || el === arr.length - 4 || el === arr.length - 3) {\r\n                    if (el === 4) {\r\n                        const currentNumber = currentPage - 1 >= 1 ? currentPage - 1 : arr.length;\r\n                        return <PaginationItem currentNumber={currentNumber} currentPage={currentPage}\r\n                                               pageSize={pageSize}\r\n                                               setCurrentPage={setCurrentPage} getUsers={getUsers} item={\"<\"}\r\n                                               className={classes.borderLeft}/>\r\n                    } else if (el === arr.length - 3) {\r\n                        const currentNumber = currentPage + 1 <= arr.length ? currentPage + 1 : 1;\r\n                        return <PaginationItem currentNumber={currentNumber} currentPage={currentPage}\r\n                                               pageSize={pageSize}\r\n                                               setCurrentPage={setCurrentPage} getUsers={getUsers} item={\">\"}\r\n                                               className={classes.borderRight}/>\r\n                    } else {\r\n                        const length = arr.length - 3;\r\n                        const item = currentPage <= 3\r\n                            ? 4\r\n                            : currentPage >= length\r\n                                ? length\r\n                                : currentPage;\r\n\r\n                        return <PaginationItem currentNumber={item} currentPage={currentPage} pageSize={pageSize}\r\n                                               setCurrentPage={setCurrentPage}\r\n                                               getUsers={getUsers} item={item}/>\r\n                    }\r\n                }\r\n            })\r\n\r\n            // Если страниц меньше 20, просто возвращаем массив обернутых в разметку чисел\r\n        } else {\r\n            pagination = pages.map(el => {\r\n                return <PaginationItem currentNumber={el} currentPage={currentPage} pageSize={pageSize}\r\n                                       setCurrentPage={setCurrentPage} getUsers={getUsers}/>\r\n            })\r\n        }\r\n\r\n        return pagination;\r\n    }\r\n\r\n    return <div className={classes.pagination}>\r\n        <div className={classes.paginationWrap}>\r\n            {createPagination()}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UserImage = ({img, name, userId}) =>\r\n    <div className={classes.avatarImage}>\r\n        {img\r\n            ? <img src={img} alt=\"avatar\"/>\r\n            : name.substr(0, 1).toUpperCase()}\r\n    </div>\r\n\r\nconst UserAvatar = ({user, ...props}) => {\r\n    const followBtn = flag => flag ? \"Unfollow\" : \"Follow\";\r\n    const checkFollowing = (flag, id, e) => {\r\n        e.preventDefault();\r\n        return flag ? props.unFollowTo(id) : props.followTo(id);\r\n    };\r\n\r\n    return <div className={classes.userAvatar}>\r\n        <UserImage img={user.photos.small} name={user.name} userId={user.id}/>\r\n        <button disabled={props.isFollowing.some(id => id === user.id)}\r\n                className={classes.avatarButton}\r\n                onClick={e => checkFollowing(user.followed, user.id, e)}>\r\n            {followBtn(user.followed)}\r\n        </button>\r\n    </div>\r\n}\r\n\r\nconst UserInfo = ({user}) =>\r\n    <div className={classes.userInfo}>\r\n        <div className={classes.infoName}>{user.name}</div>\r\n        <div className={classes.infoStatus}>{user.status}</div>\r\n    </div>\r\n\r\nconst User = ({user, ...props}) =>\r\n    <NavLink to={`/profile/${user.id}`} className={classes.user}>\r\n        <UserAvatar user={user} unFollowTo={props.unFollowTo} followTo={props.followTo}\r\n                    isFollowing={props.isFollowing}/>\r\n        <UserInfo user={user}/>\r\n    </NavLink>\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport User from \"./User\";\r\n\r\nconst Users = props => {\r\n\r\n    return <div className={`${classes.usersWrap} component--wrap`}>\r\n        <Preloader flag={props.isFetching}/>\r\n\r\n        {props.users.map(el => <User key={el.id} user={el} {...props}/>)}\r\n\r\n        <Pagination {...props}/>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","export const getUsersState = state => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSizeState = state => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountState = state => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageState = state => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingState = state => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getIsFollowingState = state => {\r\n    return state.usersPage.isFollowing\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {followTo, getUsers, setCurrentPage, unFollowTo} from '../../redux/Users/users-reducer';\r\nimport Users from './Users';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageState, getIsFetchingState, getIsFollowingState,\r\n    getPageSizeState,\r\n    getTotalUsersCountState,\r\n    getUsersState\r\n} from \"../../redux/Users/users-selectors\";\r\n\r\nconst UsersContainer = props => {\r\n    useEffect(() => {\r\n        const {currentPage, pageSize} = props\r\n        props.getUsers(currentPage, pageSize);\r\n    }, [props.currentPage])\r\n\r\n    return <Users {...props}/>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    users: getUsersState(state),\r\n    pageSize: getPageSizeState(state),\r\n    totalItemsCount: getTotalUsersCountState(state),\r\n    currentPage: getCurrentPageState(state),\r\n    isFetching: getIsFetchingState(state),\r\n    isFollowing: getIsFollowingState(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrentPage,\r\n    getUsers,\r\n    unFollowTo,\r\n    followTo\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(UsersContainer);\r\n"],"sourceRoot":""}